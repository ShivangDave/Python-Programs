var a = Set<Int>()
var b = a
a.insert(8)

print(b.anyObject())
// What do you think this line will print?


// class vs struct

var a : String?
var b : String! = ""

a = nil Optional.None
b = nil

func doSomething()
{
    let data = //
    a = data as? Array
}

// 3

class MyViewController: UIViewController, UITableViewDelegate
(
    {

    override func viewDidLoad() {
        super.viewDidLoad()
        print("Hello")
        DispatchQueue.main.async {
            print("World")
        }
        print("!")
        // NSThread

    }
}
//4
func parallelFunction() {
    var array = NSMutableArray()// [1,2,3,4]
    NSThread {
        for i in 0..<array.count {
            array[i] += 1
        }
    }.start()

    NSThread {
        or i in 0..<array.count {
            array[i] += 2
        }
    }.start()
}

//5

weak unowned strong

@IBOutlet weak var txtLabel : UILabel!


//7

bounds vs frame
(0,0) (x,y) (height,width)

var view1 = UIView(frame: CGRect(0,0,200,200))
var view2 = UIView(frame: CGRect(50,50,50,50))
view1.addSubview(view2)
view2.frame == CGRect(50,50,50,50)
view2.bounds == CGRect(0,0,50,50)

//8
Array, Set, Dictionary, Tuple, NSMutableArray, NSArray, NSDictionary,

var a
a = [1,5,6,1,1,7,1,1,1,1,1]
// should return index of the elemnent which count(element) > (array.count / 2)
func majorityElement(_ array: [Int]) -> Int {

    var dict = [Int:Int]()
    var count = 0
    var index = 0

    for i in 0..<array.count //1
    {
        for j in 0..<array.count
        {
            dict.setValue(count,forKey: array[i])
            // [1:8,5:1,]
            if array[i] == array[j]
            {
                count = dict.getValue(forKey: array[i])
                count += 1
                dict.updateValue(count,forKey: array[i])
            }
        }
    }

    let maxValue = max(dict.values)
        if maxValue > array.count/2
        {
            index = dict.key(forValue: maxValue)
        }

    if array.contains(index)
    {
        return index
    }

    return index
}
